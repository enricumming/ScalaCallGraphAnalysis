digraph CallGraph {
  node [shape=box];
  "Bird.makeSound()" [style=filled, fillcolor=red];
  "Logging.logError(String)" [style=filled, fillcolor=red];
  "constructor.newInstance(\"DynamicBird\")" [style=filled, fillcolor=white];
  "MainApp2.main()" [style=filled, fillcolor=white];
  "instance.makeSound()" [style=filled, fillcolor=white];
  "Cat.makeSound()" [style=filled, fillcolor=red];
  "Animal.makeSound()" [style=filled, fillcolor=white];
  "Dog.makeSound()" [style=filled, fillcolor=white];
  "Logging.println(s\"[DEBUG] $debug\")" [style=filled, fillcolor=red];
  "Utils.println(s\"Message: $message\")" [style=filled, fillcolor=white];
  ".asInstanceOf()" [style=filled, fillcolor=white];
  "Class.forName(className)" [style=filled, fillcolor=white];
  "Utils.printMessage(\"Welcome to the testing environment!\")" [style=filled, fillcolor=white];
  "DynamicCalls.invokeMakeSound(dynamicClass)" [style=filled, fillcolor=white];
  "Class.forName()" [style=filled, fillcolor=white];
  "Dog.<init>()" [style=filled, fillcolor=white];
  "Logging.logInfo(s\"$name barked.\")" [style=filled, fillcolor=white];
  "e.getMessage()" [style=filled, fillcolor=white];
  "DeprecatedClass.deprecatedMethod()" [style=filled, fillcolor=red];
  "Logging.println(s\"[INFO] $message\")" [style=filled, fillcolor=white];
  "LambdaExample.unusedMethod()" [style=filled, fillcolor=red];
  "Dog.println(s\"$name says: Woof!\")" [style=filled, fillcolor=white];
  "DynamicCalls.println(s\"Error during reflection: ${e.getMessage}\")" [style=filled, fillcolor=white];
  "Utils.createLogger(\"MainLogger\")" [style=filled, fillcolor=white];
  "utils.Logging()" [style=filled, fillcolor=white];
  "clazz.getConstructor(classOf[String])" [style=filled, fillcolor=white];
  "Utils.println(s\"[$prefix] $message\")" [style=filled, fillcolor=white];
  "clazz.getConstructor()" [style=filled, fillcolor=white];
  "Cat.println(s\"$name says: Meow!\")" [style=filled, fillcolor=red];
  "logger(\"This is a log message.\")" [style=filled, fillcolor=white];
  "constructor.newInstance()" [style=filled, fillcolor=white];
  "Logging.println(s\"[ERROR] $error\")" [style=filled, fillcolor=red];
  "Logging.logInfo()" [style=filled, fillcolor=white];
  "Logging.logDebug(String)" [style=filled, fillcolor=red];
  "LambdaExample.println(\"This method is not called.\")" [style=filled, fillcolor=red];
  "Bird.println(s\"$name chirps melodiously.\")" [style=filled, fillcolor=red];
  "DeprecatedClass.println(\"This is a deprecated method.\")" [style=filled, fillcolor=red];
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "constructor.newInstance(\"DynamicBird\")";
  "Bird.makeSound()" -> "Bird.println(s\"$name chirps melodiously.\")";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "instance.makeSound()";
  "Dog.makeSound()" -> "Logging.logInfo()";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "e.getMessage()";
  "MainApp2.main()" -> "Utils.printMessage(\"Welcome to the testing environment!\")";
  "MainApp2.main()" -> "DynamicCalls.invokeMakeSound(dynamicClass)";
  "MainApp2.main()" -> "Dog.makeSound()";
  "Utils.printMessage(\"Welcome to the testing environment!\")" -> "Utils.println(s\"Message: $message\")";
  "Dog.makeSound()" -> "Logging.logInfo(s\"$name barked.\")";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "clazz.getConstructor(classOf[String])";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "Class.forName()";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> ".asInstanceOf()";
  "MainApp2.main()" -> "Utils.createLogger(\"MainLogger\")";
  "DeprecatedClass.deprecatedMethod()" -> "DeprecatedClass.println(\"This is a deprecated method.\")";
  "MainApp2.main()" -> "logger(\"This is a log message.\")";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "clazz.getConstructor()";
  "LambdaExample.unusedMethod()" -> "LambdaExample.println(\"This method is not called.\")";
  "Dog.makeSound()" -> "Dog.println(s\"$name says: Woof!\")";
  "Logging.logInfo(s\"$name barked.\")" -> "Logging.println(s\"[INFO] $message\")";
  "Logging.logError(String)" -> "Logging.println(s\"[ERROR] $error\")";
  "Cat.makeSound()" -> "Cat.println(s\"$name says: Meow!\")";
  "Dog.makeSound()" -> "utils.Logging()";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "constructor.newInstance()";
  "MainApp2.main()" -> "Dog.<init>()";
  "MainApp2.main()" -> "Animal.makeSound()";
  "Logging.logDebug(String)" -> "Logging.println(s\"[DEBUG] $debug\")";
  "Utils.createLogger(\"MainLogger\")" -> "Utils.println(s\"[$prefix] $message\")";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "Class.forName(className)";
  "DynamicCalls.invokeMakeSound(dynamicClass)" -> "DynamicCalls.println(s\"Error during reflection: ${e.getMessage}\")";
}
