//package example
//
//object Example2 {
//
//  abstract class A { //  Ahora A es abstracta
//    def foo: String //  MÃ©todo abstracto
//  }
//
//  class B extends A {
//    override def foo = "B.foo"
//  }
//
//  class C {
//    def foo = "C.foo"
//  }
//
//  class D extends B {
//    override def foo = "D.foo"
//  }
//
//  class CallSiteClass[T <: A](val receiver: T) {
//    def callsite = {
//      receiver.foo
//    }
//  }
//
//  def main(args: Array[String]): Unit = {
//    val receiver: A = new B() //  `receiver` es de tipo `A`, pero instancia `B`
//    val callSiteClass = new CallSiteClass[A](receiver)
//    callSiteClass.callsite()
//  }
//}